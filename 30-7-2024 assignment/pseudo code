19. to find average of two numbers
pseudo: routine
   Function FindAverage(num1,num2)
        avg=(num1+num2)/2
        return avg
pseudo: routine test
   Procedure TestFindAverage()
       Input num1
       Input num2
       avg=FindAverage(num1,num2)
       print avg


20. to find cube of number
pseudo: routine
    Function FindCube(num)
        cube= num*num*num
        return cube

pseudo: routin test
    Procedure TestFindCube()
        input num
        cube= FindCube(num)
        print cube


15. to find square of the number
pseudo: routine
    Function FindSquare(num)
        square= num*num
        return square

pseudo: routine test
    Procedure TestFindSquare()
         input num
         square= FindSquare(num)
         print square




9. swap two numbers
pseudo: routine
    Function Swap(a,b)
       temp=a
       a=b
       b=temp

pseudo: routine test
    Procedure TestSwap()
        input a
        input b
        swap= Swap(a,b)
        print a
        print b



28. to check nubmer is divisible by 3
pseudo: routine
   Function IsDivisibleBy3(num)
      if num % 3 == 0
          return true
      else
          return false

pseudo: routine test
   Procedure TestIsDivisibleBy3()
       input num
       if IsDivisibleBy3(num)
            print "Divisible by 3"
       else 
            print "not divisible by 3"




11. number divisible by 27
pseudo: routine
   Function IsDivisibleBy27(num)
      if num % 27 == 0
          return true
      else
          return false

pseudo: routine test
   Procedure TestIsDivisibleBy27()
       input num
       if IsDivisibleBy27(num)
            print "Divisible by 27"
       else 
            print "not divisible by 27"




14. to print N natural numbers
pseudo: routine
   Function PrintNaturalNumber(num)
       for i= 1 to num
          print i

pseudo: routine test
   Procedure TestPrintNaturalNumber()
        input num
        nat = PrintNaturalNumber(num)





1. to check a number palindrome
pseudo: routine
   Function IsPalindrome(num)
        originalNum= num
        reverseNum=0
        while originalNum>0
           digit= originalNum % 10
           reverseNum= reverseNum * 10 + digit
           originalNum= originalNum / 10
        end while
            return (number = reverseNum
      

pseudo: routine test
    Procedure TestIsPlaindrome()
          input num
          if IsPalindrome(num)
               print "number is plaindrome"
          else
               print "number is not palindrome"
                 




2. to check a number amstrong
pseudo: routine
   Procedure IsArmstrong(num)
       temp=num
       sum=0
       digitCount= length of num
       while num > 0
         digit= num % 10
         sum= sum + (digit ^ digitCount)
         num= num / 10
      if sum == temp
            return true
      else
            return false
pseudo: routine test
    Procedure TestIsArmstrong()
          input num
          result = IsArmstrong(num)
          if result=true
              print "number is armstrong"
          else
              print "number is not armstrong"
           



3. to check a number prime
pseudo: routine
   Function IsPrime(num)
          for i = 2 to (num/2)
                if num % i ==0
                   return false
                else
                   return true
pseudo: routine test
    Procedure TestIsPrime()
         input num
         result= IsPrime(num)
         if result = true
             print "prime number"
         else
             print "not prime number"



7.check for perfect numbers

pseudo : routine
function isPerfectNumber(num)
    sum = 0
    temp = n
    for i from 1 to n-1 do
      if temp % i ==0
         sum = sum + i

    if sum == n
      return true
    else 
      return false


pseudo: routine test
function testIsPerfectNumber()
    input num
    if isPerfectNumber(num)
      print"perfect number"
    else
      print"not perfect number"



17.Odd or even

pseudo : routine
function IsOddOrEven(num)
    if num % 2 == 0
      print "odd"
    else:
      print "even"


test routine:
function testIsOddOrEven()
    input num 
    IsoddOrEven(num)
