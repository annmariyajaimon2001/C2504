1. Find Orders with the Largest Order Value
Problem: Given an `Orders` table
with columns `OrderID`, `CustomerID`, and `OrderValue`,
find the order with the largest order value.

answer: 
SELECT OrderID, CustomerID, OrderValue
FROM Orders
WHERE OrderValue = (SELECT MAX(OrderValue) FROM Orders);




2. Find the Day with the Highest Sales
Problem: Given a `Sales` table
with columns `SaleAmount` and `SaleDate`,
find the day with the highest total sales.

answer:
SELECT SaleDate, SUM(SaleAmount) AS TotalSales
FROM Sales
GROUP BY SaleDate
ORDER BY TotalSales DESC
LIMIT 1;



3. Find the Oldest and Youngest Employees
Problem: Given an `Employees` table
with columns `EmployeeID`, `Name`, and `DateOfBirth`,
find the oldest and youngest employees.

answer:  

SELECT EmployeeID, Name, DateOfBirth
FROM Employees
WHERE DateOfBirth = (SELECT MIN(DateOfBirth) FROM Employees);

UNION ALL

SELECT EmployeeID, Name, DateOfBirth
FROM Employees
WHERE DateOfBirth = (SELECT MAX(DateOfBirth) FROM Employees);



4. Find Employees with No Manager
Problem:
Given an `Employees` table
with columns `EmployeeID`, `Name`, and `ManagerID`
(which refers to `EmployeeID` of the manager),
find all employees who do not have a manager.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
Name VARCHAR(100),
ManagerID INT
);

answer:
SELECT EmployeeID, Name
FROM Employees
WHERE ManagerID IS NULL;



5. Find the Second Highest Salary
Problem: Given an `Employees` table
with columns `EmployeeID`, `Name`, and `Salary`,
find the second highest salary.

answer: 
SELECT Salary
FROM Employees
ORDER BY Salary DESC
LIMIT 1 OFFSET 1;


