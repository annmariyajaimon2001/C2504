public class Prescription
{
    public int PrescriptionID { get; set; }
    public string PatientName { get; set; }
    public string MedicationName { get; set; }
    public double Dosage { get; set; }

    public Prescription(int prescriptionID, string patientName, string medicationName, double dosage)
    {
        PrescriptionID = prescriptionID;
        PatientName = patientName;
        MedicationName = medicationName;
        Dosage = dosage;
    }


    public override string ToString()
    {
        return $"Prescription ID: {PrescriptionID}, Patient Name: {PatientName}, Medication Name: {MedicationName}, Dosage: {Dosage} mg";
    }
}

public class PrescriptionService
{
    public static void Read(Prescription[] prescription)
    {
        for (int i = 0; i < 4; i++)
        {
            Console.WriteLine($"Enter the details for Prescription{i + 1}:");
            Console.Write("Prescription ID:");
            int prescriptionID = int.Parse(Console.ReadLine());
            Console.Write("Patient Name:");
            string patientName = Console.ReadLine();
            Console.Write("Medication Name:");
            string medicationName = Console.ReadLine();
            Console.Write("Dosage in milligrams:");
            double dosage = double.Parse(Console.ReadLine());

            prescription[i] = new Prescription(prescriptionID, patientName, medicationName, dosage);
        };
    }
    public static void Sort(Prescription[] prescription)
    {
        for (int i = 0; i < prescription.Length - 1; i++)
        {
            int minIndex = i;
            for (int j = i + 1; j < prescription.Length; j++)
            {
                if (prescription[j].MedicationName.CompareTo(prescription[minIndex].MedicationName) < 0)
                {
                    minIndex = j;
                }
            }

            if (minIndex != i)
            {
                Prescription temp = prescription[i];
                prescription[i] = prescription[minIndex];
                prescription[minIndex] = temp;
            }
        }
    }
    public static Prescription FindMax(Prescription[] prescription)
    {
        Prescription maxDosage = prescription[0];
        foreach (var e in prescription)
        {
            if (e.Dosage > maxDosage.Dosage)
            {
                maxDosage = e;
            }
        }

        return maxDosage;
    }
    public static Prescription FindThirdMin(Prescription[] prescription)
    {
        double firstMinDos = double.MaxValue;
        double secondMinDos = double.MaxValue;
        double thirdMinDos = double.MaxValue;
        Prescription thirdLeastPrescription = null;
        foreach (var p in prescription)
        {
            double dosage = p.Dosage;
            if (dosage < firstMinDos)
            {
                thirdMinDos = secondMinDos;
                secondMinDos = firstMinDos;
                firstMinDos = dosage;
            }
            else if (dosage < secondMinDos && dosage != firstMinDos)
            {
                thirdMinDos = secondMinDos;
                secondMinDos = dosage;
            }
            else if (dosage < thirdMinDos && dosage != secondMinDos && dosage != firstMinDos)
            {
                thirdMinDos = dosage;
            }
        }

        foreach (var e in prescription)
        {
            if (e.Dosage == thirdMinDos)
            {
                thirdLeastPrescription = e;
                break;
            }
        }
            return thirdLeastPrescription;
    }

}
    internal class Program
    {
        static void Main(string[] args)
        {
             Prescription[] prescriptions = new Prescription[4];
             PrescriptionService.Read(prescriptions);
             Prescription max = PrescriptionService.FindMax(prescriptions);
             Console.WriteLine($"max = {max}");
             Prescription thirdMin = PrescriptionService.FindThirdMin(prescriptions);
             Console.WriteLine($"thirdmin = {thirdMin}");
             PrescriptionService.Sort(prescriptions);
             foreach (var e in prescriptions)
             {
                     Console.WriteLine($"{e}");
             }

        }
    }
